on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  schedule:
    - cron: "3 3 * * *"

name: CI

jobs:
  build:
    name: Cargo Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: RUSTFLAGS="-D warnings" cargo build

  examples:
    name: Cargo Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - libftd2xx
          - ftdi
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: |
          if ${{ matrix.features == 'ftdi' }}
          then
            sudo apt-get update
            sudo apt-get install -y libftdi1 libftdi1-dev pkg-config
          fi
          RUSTFLAGS="-D warnings" cargo build --features ${{ matrix.features }} --examples

  test:
    name: Cargo Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - libftd2xx
          - ftdi
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: |
          if ${{ matrix.features == 'ftdi' }}
          then
            sudo apt-get update
            sudo apt-get install -y libftdi1 libftdi1-dev pkg-config
          fi
          RUSTFLAGS="-D warnings" cargo test --features ${{ matrix.features }}

  doc:
    name: Cargo Doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: RUSTDOCFLAGS="-D warnings" cargo doc --all-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  format:
    name: Cargo Fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - run: cargo fmt -- --check

  release:
    name: crates.io release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, test, examples, doc, clippy, format]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo publish --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
